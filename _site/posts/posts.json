[
  {
    "path": "posts/2021-01-05-my-first-post/",
    "title": "My First R Markdown Document",
    "description": "A new article created using the Distill format.",
    "author": [
      {
        "name": "Andre Lee",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2021-01-26",
    "categories": [],
    "contents": "\r\n1.0 Overview\r\nCorrelation coefficient is a popular statistic that use to measure the type and strength of the relationship between two variables. The values of a correlation coefficient ranges between -1.0 and 1.0. A correlation coefficient of 1 shows a perfect linear relationship between the two variables, while a -1.0 shows a perfect inverse relationship between the two variables. A correlation coeficient of 0.0 shows no linear relationship between the two variables.\r\nWhen multivariate data are used, the correlation coeficeints of the pair comparisons are displayed in a table form known as correlation matrix or scatterplot matrix.\r\nThere are three broad reasons for computing a correlation matrix.\r\nTo reveal the relationship between highdimensional variables pairwisely.\r\nTo input into other analyses. For example, people commonly use correlation matrixes as inputs for exploratory factor analysis, confirmatory factor analysis, structural equation models, and linear regression when excluding missing values pairwise.\r\nAs a diagnostic when checking other analyses. For example, with linear regression a high amount of correlations suggests that the linear regression’s estimates will be unreliable.\r\nWhen the data is large, both in terms of the number of observations and the number of variables, Corrgram tend to be used to visually explore and analyse the structure and the patterns of relations among variables. It is designed based on two main schemes:\r\nRendering the value of a correlation to depict its sign and magnitude, and\r\nReordering the variables in a correlation matrix so that “similar” variables are positioned adjacently, facilitating perception.\r\nIn this hands-on exercise, you will learn how to plot data visualisation for visualising correlation matrix with R. It consists of three main sections. First, you will learn how to create correlation matrix using pairs() of R Graphics. Next, you will learn how to plot corrgram using corrplot package of R Lastly, you will learn how to create an interactive correlation matrix using plotly R. .\r\n2.0 Installing and Launching R Packages\r\nBefore you get started, you are required:\r\nto start a new R project, and\r\nto create a new R Markdown document.\r\nNext, you will use the code chunk below to install and launch corrplot, ggpubr, plotly and tidyverse in RStudio.\r\n\r\n\r\npackages = c('ggpubr', 'tidyverse')\r\n\r\nfor(p in packages){library\r\n  if(!require(p, character.only = T)){\r\n    install.packages(p)\r\n  }\r\n  library(p, character.only = T)\r\n}\r\n\r\n\r\n\r\n3.0 Importing and Preparing The Data Set\r\nIn this hands-on exercise, the Wine Quality Data Set of UCI Machine Learning Repository will be used. The data set consists of 13 variables and 6497 observations. For the purpose of this exercise, we have combined the red wine and white wine data into one data file. It is called wine_quality and is in csv file format.\r\n3.1 Importing Data\r\nFirst, let us import the data into R by using read_csv() of readr package.\r\n\r\n\r\nwine <- read_csv(\"data/wine_quality.csv\")\r\n\r\n\r\n\r\nNotice that beside quality and type, the rest of the variables are numerical and continuous data type.\r\n4.0 Univariate EDA with Histogram\r\nIn the figure below, multiple histograms are plottted to reveal the distribution of the selected variables in the wine quality data sets.\r\n\r\n\r\n\r\nThe code chunks used to create the data visualisation consists of two main parts. First, we will create the individual histograms using the code chunk below.\r\n\r\n\r\nfa <- ggplot(data=wine, aes(x= `fixed acidity`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nva <- ggplot(data=wine, aes(x= `volatile acidity`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nca <- ggplot(data=wine, aes(x= `citric acid`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nrs <- ggplot(data=wine, aes(x= `residual sugar`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nch <- ggplot(data=wine, aes(x= `chlorides`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nfSO2 <- ggplot(data=wine, aes(x= `free sulfur dioxide`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\ntSO2 <- ggplot(data=wine, aes(x= `total sulfur dioxide`)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\ndensity <- ggplot(data=wine, aes(x= density)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\npH <- ggplot(data=wine, aes(x= pH)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nsulphates <- ggplot(data=wine, aes(x= sulphates)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\nalcohol <- ggplot(data=wine, aes(x= alcohol)) +\r\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\r\n\r\n\r\n\r\nNext, the ggarrange function of ggpur package is used to group these histograms together.\r\n\r\n\r\nggarrange(fa, va, ca, rs, ch, fSO2, tSO2, density, pH, sulphates, alcohol, \r\n          ncol = 4, nrow = 3)\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-01-26T01:49:20+08:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-01-26-dataviz-makeover-1/",
    "title": "DataViz Makeover 1",
    "description": "Resident Labour Force Statistics",
    "author": [
      {
        "name": "Andre Lee",
        "url": {}
      }
    ],
    "date": "2021-01-26",
    "categories": [],
    "contents": "\r\nDataViz Makeover 1\r\n\r\na)\r\nClarity\r\nWrong choice of visualization:\r\nComment: Age group is a categorical datatype and thus line chart may not be the best way to represent it.\r\nSuggestion: Represent categorical datatype using bar chart instead of line chart.\r\nUnclear Chart title:\r\nComment: Chart title is unclear. It says ‘Resident labour force by age’ followed by ‘Per Cent’ at the bottom, which doesn’t really help in readers’ understanding.\r\nSuggestion: Title should mention the distinct time periods that the chart is describing. Change the title to ‘Comparison of resident labour force percentage by age group in June 2009 and June 2019’.\r\nMismatch between statement and visualization:\r\nComment: The statement mentions LFPR increasing but there is no illustration or reference to LFPR in the visualisation. This serves to confuse readers since they may be wondering whether the visualisation is referring to LFPR or just resident labour force.\r\nSuggestion: Have a separate visualisation to reference how LFPR has increased from 2009 to 2019 for the various age groups.\r\nAesthetic\r\nPoor Choice of Colours\r\nComment: The 2 colours used for 2009 and 2019 are both relatively dark and thus no visual contrast.\r\nSuggestion: Use 2 more contrasting colours to make the distinction between both years more obvious.\r\nRepetitive Labelling\r\nComment: The labelling for this graph is rather repetitive. For example, you see “June 2009” show up 3 times; 1) in the table below 2) ‘Median Age in June 2009’ at the median line 3) Labelling the line graph. Similar for “June 2019”. This makes the graph look cluttered.\r\nSuggestion: Only have one Date label for each date rather than multiple labels for the same date.\r\nNo vertical axis\r\nComment: It is not clear at first sight what the height of the line graph represents.\r\nSuggestion: Have a vertical axis on the side of the graph to show that the points on the lines stand for percentage\r\nx-axis not labelled\r\nComment: Not everyone will immediately know that ’15-19’, ’20-24’ etc represents age groups.\r\nSuggestion: Label the axis with ‘Age Group’\r\nb)\r\n-insert first chart here-\r\nBy switching from line chart to bar chart, categorical data of age groups is more correctly represented.\r\nBy having a y-axis showing ‘Percentage of Workforce’ and labelling the bars, viewers are able to know what the heights of the bars represent. This is opposed to the current design where there is no immediate understanding visually of what the lines represent.\r\n-insert second chart here-\r\nd)\r\nStep-by-step description on how data visualization was prepared\r\nInput the raw data from the given visualization into Excel\r\n\r\n\r\nLoad dataset into Tableau. Double check that data and datatypes are correct before proceeding to make visualization.\r\n\r\n\r\nDrag ‘Age Group’ into Columns Drag ‘Jun-09’ and ‘Jun-19’ into Rows\r\n\r\n\r\nDrag ‘Jun-19’ into the ‘Jun-09’ y-axis on the top panel of the chart\r\n\r\n\r\n\r\nEdit y-axis to change max value to be 20. Change the name of axis to ‘Percentage of Workforce(%)’\r\nDrag ‘Measure Names’ from Tables to ‘Color’. This makes ‘Jun-09’ blue and ‘Jun-19’ yellow\r\nUncheck ‘Show Header’ on the x-axis. This gets rid of the Jun-09 and Jun-19 labelling on the x-axis.\r\n\r\n\r\nEdit Title of legend to ‘Time Period’. Edit Alias for both ‘Jun-09’ and ‘Jun-19’ to as follows to inform viewers of the median age for both time periods:\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-01-27T03:16:26+08:00",
    "input_file": "dataviz-makeover-1.utf8.md"
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to IDEA",
    "description": "Welcome to our new blog, IDEA. We hope you enjoy \nreading what we have to say!",
    "author": [
      {
        "name": "Andre Lee",
        "url": "www.espn.com.sg/soccer"
      }
    ],
    "date": "2021-01-05",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2021-01-05T11:40:08+08:00",
    "input_file": {}
  }
]
